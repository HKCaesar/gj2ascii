"""``pytest`` fixtures."""


import os

from click.testing import CliRunner
import pytest


@pytest.fixture(scope='function')
def runner():
    return CliRunner()


@pytest.fixture(scope='module')
def expected_polygon_40_wide():
    return os.linesep.join([
        '. + . . . . . . . . . . . + . . . . . .',
        '. + + + . . . . . . . . . . . . . . . .',
        '. . . + . . . . . . . . . . . . . . . .',
        '. . . . . . . . . . . . . + . . . . . .',
        '. . . . . . . . . + . . . . . . . . . .',
        '. . . . . . . . . + + . . . . . . . . .',
        '. . . . . . . . . + + + + . . . . . . .',
        '. . . . . . . . . . + + + + . . . . . .',
        '. . . . . . . . . . . + + + . . . . + .',
        '+ + + . . . . . . . . . + + . . . + + +',
        '+ + + + . . . . . . . . . . . . + + + +',
        '. . + . . . . . . + . . . . . . . + + .',
        '. . . . . . . . + + . . . . . . . . + .',
        '. . . . . . . + + + . . . . . . . . + .',
        '. . . . . . + + + + . . . . . . . . . .',
        '. . . . . . + + + + . . . . . . . . . .',
        '. . . . . . . . + + . . . . . . . . . .'
    ])


@pytest.fixture(scope='module')
def expected_line_40_wide():
    return os.linesep.join([
        '. . . . . . . . + + + + + + + + + + . .',
        '+ + + + + + + + + . . . . . . . . . . .',
        '+ + . . . . . . . . . . . . . . . . . .',
        '. + + . . . . . . . . . . . . . . . . .',
        '. . + + . . . . . . . . . . . . . . . .',
        '. . . + + + . . . . . . . . . . . . . .',
        '. . . . . + + . . . . . . . . . . . . .',
        '. . . . . . + + . . . . . . . . . . . .',
        '. . . . . . . + + . . . . . . . . . . .',
        '. . . . . . . . + + + . . . . . . . . .',
        '. . . . . . . . . . + + . . . . . . . .',
        '. . . . . . . . . . + . . . . . . . . .',
        '. . . . . . . . . + + . . . . . . . . .',
        '. . . . . . . . + + . . . . . . . . . .',
        '. . . . . . . . + . . . . . . . . . . .',
        '. . . . . . . + + . . . . . . . . . . .',
        '. . . . . . + + . . . . . . . . . . . .',
        '. . . . . + + . . . . . . . . . . . . .',
        '. . . . . + . . . . . . . . . . . . . .',
        '. . . . + + . . . . . . . . . . . . . .',
        '. . . + + . . . . . . . . . . . . . . .',
        '. . . + . . . . . . . . . . . . . . . .',
        '. . + + . . . . . . . . . . . . . . . .',
        '. + + . . . . . . . . . . . . . . . . .',
        '. + . . . . . . . . + . . . . . . . . .',
        '. + + . . . . . . . + + . . . . . . . .',
        '. . + . . . . . . . + + + . . . . . . .',
        '. . + + . . . . . . + . + + . . . . . .',
        '. . . + + . . . . . + . . + + . . . . .',
        '. . . . + + . . . . + . . . + + . . . .',
        '. . . . . + + . . . + . . . . + + . . .',
        '. . . . . . + + . . + . . . . . + + . .',
        '. . . . . . . + + . + . . . . . . + + .',
        '. . . . . . . . + + + . . . . . . . + +',
        '',
        '+ . . . . . . . . . . . . . . . . . . .',
        '+ . . . . . . . . . . . . . . . . . . .',
        '+ + . . . . . . . . . . . . . . . . . .',
        '. + . . . . . . . . . . . . . . . . . .',
        '. + . . . . . . . . . . . . . . . . . .',
        '. + + . . . . . . . . . . . . . . . . .',
        '. . + . . . . . . . . . . . . . . . . .',
        '. . + . . . . . . . . . . . . . . . . .',
        '. . + + . . . . . . . . . . . . . . . .',
        '. . . + . . . . . . . . . . . . . . . .',
        '. . . + . . . . . . . . . . . . . . . .',
        '. . . + + . . . . . . . . . . . . . . .',
        '. . . . + . . . . . . . . . . . . . . .',
        '. . . . + + . . . . . . . . . . . . . .',
        '. . . . . + . . . . . . . . . . . . . .',
        '. . . . . + . . . . . . . . . . . . . .',
        '. . . . . + + . . . . . . . . . . . . .',
        '. . . . . . + . . . . . . . . . . . . .',
        '. . . . . . + . . . . . . . . . . . . .',
        '. . . . . . + + . . . . . . . . . . . .',
        '. . . . . . . + . . . . . . . . . . . .',
        '. . . . . . . + . . . . . . . . . . . .',
        '. . . . . . . + + . . . . . . . . . . .',
        '. . . . . . . . + . . . . . . . . . . .',
        '. . . . . . . . + + . . . . . . . . . .',
        '. . . . . . . . . + . . . . . . . . . .',
        '. . . . . . . . . + . . . . . . . . . .',
        '. . . . . . . . . + + . . . . . . . . .',
        '. . . . . . . . . . + . . . . . . . . .',
        '. . . . . . . . . . + . . . . . . . . .',
        '. . . . . . . . . . + + . . . . . . . .',
        '. . . . . . . . . . . + . . . . . . . .',
        '. . . . . . . . . . . + . . . . . . . .',
        '. . . . . . . . . . . + + . . . . . . .',
        '. . . . . . . . . . . . + . . . . . . .',
        '. . . . . . . . . . . . + . . . . . . .',
        '. . . . . . . . . . . . + + . . . . . .',
        '. . . . . . . . . . . . . + . . . . . .',
        '. . . . . . . . . . . . . + + . . . . .',
        '. . . . . . . . . . . . . . + . . . . .',
        '. . . . . . . . . . . . . . + . . . . .',
        '. . . . . . . . . . . . . . + + . . . .',
        '. . . . . . . . . . . . . . . + . . . .',
        '. . . . . . . . . . . . . . . + . . . .',
        '. . . . . . . . . . . . . . . + + . . .',
        '. . . . . . . . . . . . . . . . + . . .',
        '. . . . . . . . . . . . . . . . + . . .',
        '. . . . . . . . . . . . . . . . + + . .',
        '. . . . . . . . . . . . . . . . . + . .',
        '. . . . . . . . . . . . . . . . . + + .',
        '. . . . . . . . . . . . . . . . . . + .',
        '. . . . . . . . . . . . . . . . . . + .',
        '. . . . . . . . . . . . . . . . . . + +',
        '. . . . . . . . . . . . . . . . . . . +',
        '. . . . . . . . . . . . . . . . . . . +',
        '',
        '+ + + + + + + + + + + + + + + + + + + +',
        ''])


@pytest.fixture(scope='module')
def expected_all_properties_output():
    return os.linesep.join([
        '+----------+----------------+',
        '| STATEFP  |             54 |',
        '| COUNTYFP |            001 |',
        '| COUNTYNS |       01696996 |',
        '| GEOID    |          54001 |',
        '| NAME     |        Barbour |',
        '| NAMELSAD | Barbour County |',
        '| LSAD     |             06 |',
        '| CLASSFP  |             H1 |',
        '| MTFCC    |          G4020 |',
        '| CSAFP    |           None |',
        '| CBSAFP   |           None |',
        '| METDIVFP |           None |',
        '| FUNCSTAT |              A |',
        '| ALAND    |      883338808 |',
        '| AWATER   |        4639183 |',
        '| INTPTLAT |    +39.1397248 |',
        '| INTPTLON |   -079.9969466 |',
        '+----------+----------------+',
        '',
        '',
        '      + + +   + + +',
        '    + + + + + +',
        '+ + + + + +',
        '+ + + + +'])


@pytest.fixture(scope='module')
def poly_file():
    return os.path.join('sample-data', 'polygons.geojson')


@pytest.fixture(scope='module')
def line_file():
    return os.path.join('sample-data', 'lines.geojson')


@pytest.fixture(scope='module')
def point_file():
    return os.path.join('sample-data', 'points.geojson')


@pytest.fixture(scope='module')
def single_feature_wv_file():
    return os.path.join('sample-data', 'single-feature-WV.geojson')


@pytest.fixture(scope='module')
def multilayer_file():
    return os.path.join('sample-data', 'multilayer-polygon-line')


@pytest.fixture(scope='module')
def small_aoi_poly_line_file():
    return os.path.join('sample-data', 'small-aoi-polygon-line.geojson')


@pytest.fixture(scope='module')
def compare_ascii():
    def _compare_ascii(out1, out2):
        # Zip over two blocks of text and compare each pair of lines
        for o1_line, o2_line in zip(out1.rstrip().splitlines(), out2.rstrip().splitlines()):
            if o1_line.rstrip() != o2_line.rstrip():
                return False
        return True
    return _compare_ascii
